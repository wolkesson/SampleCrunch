<Window x:Class="Sample_Crunch.SplashScreen"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:sc="clr-namespace:Sample_Crunch"
        xmlns:properties="clr-namespace:Sample_Crunch.Properties"
        Title="SplashScreen" Height="200" Width="500" 
        ResizeMode="NoResize" WindowStyle="None" WindowStartupLocation="CenterScreen" 
        BorderThickness="5" BorderBrush="AliceBlue"
        DataContext="{Binding Source={StaticResource Locator}}"
        Background="#FF434343">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
        <sc:MultiBooleanToVisibilityConverter x:Key="AndConverter"/>
        <Color x:Key="DarkBackground">#FF434343</Color>
        <SolidColorBrush x:Key="DarkBrush" Color="{StaticResource DarkBackground }"></SolidColorBrush>

        <Style x:Key="LightTextStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Margin" Value="10,0"/>
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Margin" Value="10,0"/>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="50"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="40*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition Width="166"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Canvas Background="White" Grid.RowSpan="6" >
            <Image Source="/Resources/SampleCrunchLogo.png" Width="{Binding Parent.ActualWidth, Mode=OneWay, RelativeSource={RelativeSource Self}}" Height="{Binding Parent.ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}" />
        </Canvas>
        <TextBlock Style="{StaticResource LightTextStyle}" Grid.Column="1" Grid.Row="0" Grid.ColumnSpan="2" Text="{Binding Main.Title}" FontSize="22" FontWeight="Bold"></TextBlock>
        <TextBlock Style="{StaticResource LightTextStyle}" Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2" Text="The free generic log file analyzer." />
        <TextBlock Style="{StaticResource LightTextStyle}" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="2"><Run Text="Version: "></Run><Run Text="{Binding Main.Version, Mode=OneTime}"></Run></TextBlock>
        <TextBlock Grid.Column="1" Grid.Row="3" Foreground="White" Grid.ColumnSpan="2">
            <TextBlock.Style>
                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource LightTextStyle}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=Updater.CurrentState}" Value="Idle">
                            <Setter Property="TextBlock.Text" Value="" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=Updater.CurrentState}" Value="Checking">
                            <Setter Property="TextBlock.Text" Value="Checking for updates..." />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=Updater.CurrentState}" Value="UpdateAvailable">
                            <Setter Property="TextBlock.Text" Value="{Binding Updater.AvailableVersion, StringFormat={}Update Available: {0}}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=Updater.CurrentState}" Value="NoUpdateAvailable">
                            <Setter Property="TextBlock.Text" Value="No updates available" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=Updater.CurrentState}" Value="Downloading">
                            <Setter Property="TextBlock.Text" Value="Downloading updates..." />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=Updater.CurrentState}" Value="Installing">
                            <Setter Property="TextBlock.Text" Value="Installing updates..." />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=Updater.CurrentState}" Value="Installed">
                            <Setter Property="TextBlock.Text" Value="Update installed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=Updater.CurrentState}" Value="Timedout">
                            <Setter Property="TextBlock.Text" Value="Update Failed. Check connection and retry later!" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=Updater.CurrentState}" Value="Failed">
                            <Setter Property="TextBlock.Text" Value="Update Failed. Check connection and retry later!" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>

        <Button Grid.Column="1" Grid.Row="4" Margin="10,3" Content="Update" Command="{Binding Updater.UpdateCommand}" Background="#FFA6FF5D" Grid.ColumnSpan="2">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Visibility" Value="Hidden" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Updater.CurrentState}" Value="UpdateAvailable">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="closeButton" Grid.Column="2" Grid.Row="5" Height="24" VerticalAlignment="Center" Click="closeButton_Click" Margin="1,8,0,8">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Visibility" Value="Visible" />
                    <Setter Property="Content" Value="Close" />

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Updater.CurrentState}" Value="Checking">
                            <Setter Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Updater.CurrentState}" Value="UpdateAvailable">
                            <Setter Property="Content" Value="Skip" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Updater.Updating}" Value="true">
                            <Setter Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <CheckBox x:Name="checkBox" Content="Allow App Telemetry" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=AppTelemetry}" Grid.Column="2" Margin="10,0,-15,0" Grid.Row="4" HorizontalAlignment="Left" VerticalAlignment="Bottom" Visibility="Hidden" Height="15" Width="129"/>
        <CheckBox Content="Get Pre-release versions" Grid.Column="1" Margin="10,12,5,12" Grid.Row="5" VerticalAlignment="Center" IsChecked="{Binding Updater.PreRelease}" ToolTip="Check to update to pre-release (beta) versions when available." Height="16"/>
    </Grid>
</Window>
